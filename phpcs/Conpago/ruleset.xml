<?xml version="1.0"?>
<ruleset name="Conpago">
 <description>The Conpago coding standard.</description>

 <file>./src</file>

 <rule ref="PSR2"/>

 <rule ref="Squiz.Arrays"/>
 <rule ref="Squiz.Classes"/>

 <rule ref="Squiz.Commenting.EmptyCatchComment"/>
 <rule ref="Squiz.Commenting.DocCommentAlignment"/>
 <rule ref="Squiz.Commenting.LongConditionClosingComment"/>
 <rule ref="Squiz.Commenting.FunctionComment"/>
 <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
 <rule ref="Squiz.Commenting.InlineComment"/>
 <rule ref="Squiz.Commenting.BlockComment"/>
 <rule ref="Squiz.Commenting.PostStatementComment"/>
 <rule ref="Squiz.Commenting.VariableComment"/>
 <rule ref="Squiz.Commenting.ClassComment"/>

 <rule ref="Squiz.ControlStructures"/>
 <rule ref="Squiz.CSS"/>
 <rule ref="Squiz.Debug"/>
 <rule ref="Squiz.Formatting"/>
 <rule ref="Squiz.Functions"/>
 <rule ref="Squiz.Objects"/>
 <rule ref="Squiz.Operators.IncrementDecrementUsage"/>
 <rule ref="Squiz.Operators.ValidLogicalOperators"/>
 <rule ref="Squiz.PHP"/>
 <rule ref="Squiz.Scope"/>
 <rule ref="Squiz.Strings"/>

 <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
 <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
 <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
 <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
 <rule ref="Squiz.WhiteSpace.CastSpacing"/>
 <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
 <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
 <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
 <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace"/>
 <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>

 <rule ref="Conpago.WhiteSpace.FunctionSpacing">
  <properties>
   <property name="spacing" value="1"/>
  </properties>
 </rule>

  <!-- Include some specific sniffs -->
 <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
 <rule ref="Generic.Commenting.Todo"/>
 <rule ref="Generic.Commenting.DocComment"/>
 <rule ref="Generic.ControlStructures.InlineControlStructure"/>
 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
 <rule ref="Generic.Formatting.SpaceAfterCast"/>
 <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
 <rule ref="Generic.NamingConventions.ConstructorName"/>
 <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
 <rule ref="Generic.PHP.DeprecatedFunctions"/>
 <rule ref="Generic.PHP.DisallowShortOpenTag"/>
 <rule ref="Generic.PHP.LowerCaseKeyword"/>
 <rule ref="Generic.PHP.LowerCaseConstant"/>
 <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
 <rule ref="Generic.WhiteSpace.ScopeIndent"/>
 <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
 <rule ref="PEAR.Files.IncludingFile"/>
 <rule ref="PEAR.Formatting.MultiLineAssignment"/>
 <rule ref="PEAR.Functions.ValidDefaultValue"/>
 <rule ref="PSR2.Files.EndFileNewline"/>
 <rule ref="Zend.Files.ClosingTag"/>
 <rule ref="Zend.Debug.CodeAnalyzer"/>

 <!-- Lines can be 120 chars long, but never show errors -->
 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="120"/>
   <property name="absoluteLineLimit" value="0"/>
  </properties>
 </rule>

 <!-- Use Unix newlines -->
 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n"/>
  </properties>
 </rule>

 <!-- Have 20 chars padding maximum and always show as errors -->
 <rule ref="Generic.Formatting.MultipleStatementAlignment">
  <properties>
   <property name="maxPadding" value="20"/>
   <property name="error" value="true"/>
  </properties>
 </rule>

 <!-- We allow empty catch statements -->
 <rule ref="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH">
  <severity>0</severity>
 </rule>

 <!-- We don't want gsjlint throwing errors for things we already check -->
 <rule ref="Generic.Debug.ClosureLinter">
  <properties>
   <property name="errorCodes" type="array" value="0210"/>
   <property name="ignoreCodes" type="array" value="0001,0110,0240"/>
  </properties>
 </rule>
 <rule ref="Generic.Debug.ClosureLinter.ExternalToolError">
  <message>%2$s</message>
 </rule>

 <!-- Only one argument per line in multi-line function calls -->
 <rule ref="PEAR.Functions.FunctionCallSignature">
  <properties>
   <property name="allowMultipleArguments" value="false"/>
  </properties>
 </rule>

</ruleset>